// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id
  password      String
  name          String
  gender        String?
  isTeacher     Boolean
  email         String?   @unique
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  announcements Announcement[]
  exams         Exam[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Announcement {
  id            Int       @id @default(autoincrement())
  title         String 
  content       String    @default("")
  createdAt     DateTime
  updatedAt     DateTime
  clicks        Int?      @default(0)
  audienceGrade String    @default("") // '7' for 7th, '8' for 8th, '9' for 9th, and so on.. ('78' for 7-8th, '789' for 7-9th, etc)
  userId        String
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}


// Exam models
model Exam {
  id          String    @id @default(cuid())
  name        String
  duration    Int
  grade       Int
  subject     String
  questions   Question[]
  createdAt   DateTime
  updatedAt   DateTime
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Question {
  order       Int
  question    String
  choices     Choice[]
  createdAt   DateTime
  updatedAt   DateTime
  examId      String
  exam        Exam     @relation(fields: [examId], references: [id], onDelete: Cascade)
}

model Choice {
  id          String   @id @default(cuid())
  choice      String
  isCorrect   Boolean
  createdAt   DateTime
  updatedAt   DateTime
  questionId  Int
  question    Question @relation(fields: [questionId], references: [order], onDelete: Cascade)
}
